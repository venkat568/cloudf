AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
  Subnet1Id:
    Type: AWS::EC2::Subnet::Id
  Subnet2Id:
    Type: AWS::EC2::Subnet::Id
  InstanceId:
    Type: AWS::EC2::Instance::Id
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id  
Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for the ALB"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyALB
      Scheme: internet-facing
      Type: application
      SecurityGroups:
        - !Ref SecurityGroupId
      Subnets:
        - !Ref Subnet1Id
        - !Ref Subnet2Id
      IpAddressType: ipv4
      Tags:
       - Key: Name
         Value: MyALB

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPCId
      TargetType: instance
      Targets:
        - Id: !Ref InstanceId
      HealthCheckEnabled: true 
      HealthCheckPath: "/"
      HealthCheckPort: 80
      Matcher:
        HttpCode: "200"

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup  

 
           
